package cn.jbolt.common.model.base;
import cn.jbolt.core.model.base.JBoltBaseModel;
import cn.jbolt.core.gen.JBoltField;
import com.alibaba.fastjson.annotation.JSONField;
import com.alibaba.fastjson.serializer.ToStringSerializer;

/**
 * 代码生成配置
 * Generated by JBolt, do not modify this file.
 */
@SuppressWarnings({"serial", "unchecked"})
public abstract class BaseCodeGen<M extends BaseCodeGen<M>> extends JBoltBaseModel<M>{

	/**
	 * 主键ID
	 */
	public M setId(java.lang.Long id) {
		set("id", id);
		return (M)this;
	}
	
	/**
	 * 主键ID
	 */
	@JBoltField(name="id" ,columnName="id",type="Long", remark="主键ID", required=true, maxLength=19, fixed=0, order=1)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getId() {
		return getLong("id");
	}

	/**
	 * 父ID
	 */
	public M setPid(java.lang.Long pid) {
		set("pid", pid);
		return (M)this;
	}
	
	/**
	 * 父ID
	 */
	@JBoltField(name="pid" ,columnName="pid",type="Long", remark="父ID", required=false, maxLength=19, fixed=0, order=2)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getPid() {
		return getLong("pid");
	}

	/**
	 * 项目根路径
	 */
	public M setProjectPath(java.lang.String projectPath) {
		set("project_path", projectPath);
		return (M)this;
	}
	
	/**
	 * 项目根路径
	 */
	@JBoltField(name="projectPath" ,columnName="project_path",type="String", remark="项目根路径", required=true, maxLength=255, fixed=0, order=3)
	public java.lang.String getProjectPath() {
		return getStr("project_path");
	}

	/**
	 * 是否为子表
	 */
	public M setIsSubTable(java.lang.Boolean isSubTable) {
		set("is_sub_table", isSubTable);
		return (M)this;
	}
	
	/**
	 * 是否为子表
	 */
	@JBoltField(name="isSubTable" ,columnName="is_sub_table",type="Boolean", remark="是否为子表", required=true, maxLength=1, fixed=0, order=4)
	public java.lang.Boolean getIsSubTable() {
		return getBoolean("is_sub_table");
	}

	/**
	 * 子表的顺序
	 */
	public M setSortRank(java.lang.Integer sortRank) {
		set("sort_rank", sortRank);
		return (M)this;
	}
	
	/**
	 * 子表的顺序
	 */
	@JBoltField(name="sortRank" ,columnName="sort_rank",type="Integer", remark="子表的顺序", required=true, maxLength=10, fixed=0, order=5)
	public java.lang.Integer getSortRank() {
		return getInt("sort_rank");
	}

	/**
	 * 模块类型
	 */
	public M setType(java.lang.String type) {
		set("type", type);
		return (M)this;
	}
	
	/**
	 * 模块类型
	 */
	@JBoltField(name="type" ,columnName="type",type="String", remark="模块类型", required=true, maxLength=40, fixed=0, order=6)
	public java.lang.String getType() {
		return getStr("type");
	}

	/**
	 * 主表名
	 */
	public M setMainTableName(java.lang.String mainTableName) {
		set("main_table_name", mainTableName);
		return (M)this;
	}
	
	/**
	 * 主表名
	 */
	@JBoltField(name="mainTableName" ,columnName="main_table_name",type="String", remark="主表名", required=true, maxLength=150, fixed=0, order=7)
	public java.lang.String getMainTableName() {
		return getStr("main_table_name");
	}

	/**
	 * 数据源
	 */
	public M setDatasourceName(java.lang.String datasourceName) {
		set("datasource_name", datasourceName);
		return (M)this;
	}
	
	/**
	 * 数据源
	 */
	@JBoltField(name="datasourceName" ,columnName="datasource_name",type="String", remark="数据源", required=true, maxLength=100, fixed=0, order=8)
	public java.lang.String getDatasourceName() {
		return getStr("datasource_name");
	}

	/**
	 * 数据源说明
	 */
	public M setDatasourceRemark(java.lang.String datasourceRemark) {
		set("datasource_remark", datasourceRemark);
		return (M)this;
	}
	
	/**
	 * 数据源说明
	 */
	@JBoltField(name="datasourceRemark" ,columnName="datasource_remark",type="String", remark="数据源说明", required=true, maxLength=40, fixed=0, order=9)
	public java.lang.String getDatasourceRemark() {
		return getStr("datasource_remark");
	}

	/**
	 * 数据库类型
	 */
	public M setDatabaseType(java.lang.String databaseType) {
		set("database_type", databaseType);
		return (M)this;
	}
	
	/**
	 * 数据库类型
	 */
	@JBoltField(name="databaseType" ,columnName="database_type",type="String", remark="数据库类型", required=true, maxLength=40, fixed=0, order=10)
	public java.lang.String getDatabaseType() {
		return getStr("database_type");
	}

	/**
	 * 是否为主数据源
	 */
	public M setIsMainDatasource(java.lang.Boolean isMainDatasource) {
		set("is_main_datasource", isMainDatasource);
		return (M)this;
	}
	
	/**
	 * 是否为主数据源
	 */
	@JBoltField(name="isMainDatasource" ,columnName="is_main_datasource",type="Boolean", remark="是否为主数据源", required=true, maxLength=1, fixed=0, order=11)
	public java.lang.Boolean getIsMainDatasource() {
		return getBoolean("is_main_datasource");
	}

	/**
	 * 主表主键
	 */
	public M setMainTablePkey(java.lang.String mainTablePkey) {
		set("main_table_pkey", mainTablePkey);
		return (M)this;
	}
	
	/**
	 * 主表主键
	 */
	@JBoltField(name="mainTablePkey" ,columnName="main_table_pkey",type="String", remark="主表主键", required=false, maxLength=64, fixed=0, order=12)
	public java.lang.String getMainTablePkey() {
		return getStr("main_table_pkey");
	}

	/**
	 * 数据表删除前缀
	 */
	public M setTableRemovePrefix(java.lang.String tableRemovePrefix) {
		set("table_remove_prefix", tableRemovePrefix);
		return (M)this;
	}
	
	/**
	 * 数据表删除前缀
	 */
	@JBoltField(name="tableRemovePrefix" ,columnName="table_remove_prefix",type="String", remark="数据表删除前缀", required=false, maxLength=40, fixed=0, order=13)
	public java.lang.String getTableRemovePrefix() {
		return getStr("table_remove_prefix");
	}

	/**
	 * 主表主键策略
	 */
	public M setMainTableIdgenmode(java.lang.String mainTableIdgenmode) {
		set("main_table_idgenmode", mainTableIdgenmode);
		return (M)this;
	}
	
	/**
	 * 主表主键策略
	 */
	@JBoltField(name="mainTableIdgenmode" ,columnName="main_table_idgenmode",type="String", remark="主表主键策略", required=true, maxLength=40, fixed=0, order=14)
	public java.lang.String getMainTableIdgenmode() {
		return getStr("main_table_idgenmode");
	}

	/**
	 * 版本序号
	 */
	public M setVersionSn(java.lang.Integer versionSn) {
		set("version_sn", versionSn);
		return (M)this;
	}
	
	/**
	 * 版本序号
	 */
	@JBoltField(name="versionSn" ,columnName="version_sn",type="Integer", remark="版本序号", required=true, maxLength=10, fixed=0, order=15)
	public java.lang.Integer getVersionSn() {
		return getInt("version_sn");
	}

	/**
	 * 表备注
	 */
	public M setMainTableRemark(java.lang.String mainTableRemark) {
		set("main_table_remark", mainTableRemark);
		return (M)this;
	}
	
	/**
	 * 表备注
	 */
	@JBoltField(name="mainTableRemark" ,columnName="main_table_remark",type="String", remark="表备注", required=false, maxLength=100, fixed=0, order=16)
	public java.lang.String getMainTableRemark() {
		return getStr("main_table_remark");
	}

	/**
	 * 功能作者
	 */
	public M setAuthor(java.lang.String author) {
		set("author", author);
		return (M)this;
	}
	
	/**
	 * 功能作者
	 */
	@JBoltField(name="author" ,columnName="author",type="String", remark="功能作者", required=true, maxLength=100, fixed=0, order=17)
	public java.lang.String getAuthor() {
		return getStr("author");
	}

	/**
	 * 样式类型
	 */
	public M setStyle(java.lang.Integer style) {
		set("style", style);
		return (M)this;
	}
	
	/**
	 * 样式类型
	 */
	@JBoltField(name="style" ,columnName="style",type="Integer", remark="样式类型", required=true, maxLength=10, fixed=0, order=18)
	public java.lang.Integer getStyle() {
		return getInt("style");
	}

	/**
	 * 是否CRUD
	 */
	public M setIsCrud(java.lang.Boolean isCrud) {
		set("is_crud", isCrud);
		return (M)this;
	}
	
	/**
	 * 是否CRUD
	 */
	@JBoltField(name="isCrud" ,columnName="is_crud",type="Boolean", remark="是否CRUD", required=true, maxLength=1, fixed=0, order=19)
	public java.lang.Boolean getIsCrud() {
		return getBoolean("is_crud");
	}

	/**
	 * 是否可编辑表格
	 */
	public M setIsEditable(java.lang.Boolean isEditable) {
		set("is_editable", isEditable);
		return (M)this;
	}
	
	/**
	 * 是否可编辑表格
	 */
	@JBoltField(name="isEditable" ,columnName="is_editable",type="Boolean", remark="是否可编辑表格", required=true, maxLength=1, fixed=0, order=20)
	public java.lang.Boolean getIsEditable() {
		return getBoolean("is_editable");
	}

	/**
	 * 是否为树表
	 */
	public M setIsTreeTable(java.lang.Boolean isTreeTable) {
		set("is_tree_table", isTreeTable);
		return (M)this;
	}
	
	/**
	 * 是否为树表
	 */
	@JBoltField(name="isTreeTable" ,columnName="is_tree_table",type="Boolean", remark="是否为树表", required=true, maxLength=1, fixed=0, order=21)
	public java.lang.Boolean getIsTreeTable() {
		return getBoolean("is_tree_table");
	}

	/**
	 * 检测是否可以刪除数据
	 */
	public M setIsCheckCanDelete(java.lang.Boolean isCheckCanDelete) {
		set("is_check_can_delete", isCheckCanDelete);
		return (M)this;
	}
	
	/**
	 * 检测是否可以刪除数据
	 */
	@JBoltField(name="isCheckCanDelete" ,columnName="is_check_can_delete",type="Boolean", remark="检测是否可以刪除数据", required=true, maxLength=1, fixed=0, order=22)
	public java.lang.Boolean getIsCheckCanDelete() {
		return getBoolean("is_check_can_delete");
	}

	/**
	 * 检测是否可以toggle数据
	 */
	public M setIsCheckCanToggle(java.lang.Boolean isCheckCanToggle) {
		set("is_check_can_toggle", isCheckCanToggle);
		return (M)this;
	}
	
	/**
	 * 检测是否可以toggle数据
	 */
	@JBoltField(name="isCheckCanToggle" ,columnName="is_check_can_toggle",type="Boolean", remark="检测是否可以toggle数据", required=true, maxLength=1, fixed=0, order=23)
	public java.lang.Boolean getIsCheckCanToggle() {
		return getBoolean("is_check_can_toggle");
	}

	/**
	 * 检测是否可以recover数据
	 */
	public M setIsCheckCanRecover(java.lang.Boolean isCheckCanRecover) {
		set("is_check_can_recover", isCheckCanRecover);
		return (M)this;
	}
	
	/**
	 * 检测是否可以recover数据
	 */
	@JBoltField(name="isCheckCanRecover" ,columnName="is_check_can_recover",type="Boolean", remark="检测是否可以recover数据", required=true, maxLength=1, fixed=0, order=24)
	public java.lang.Boolean getIsCheckCanRecover() {
		return getBoolean("is_check_can_recover");
	}

	/**
	 * 可编辑提交方式
	 */
	public M setEditableSubmitType(java.lang.String editableSubmitType) {
		set("editable_submit_type", editableSubmitType);
		return (M)this;
	}
	
	/**
	 * 可编辑提交方式
	 */
	@JBoltField(name="editableSubmitType" ,columnName="editable_submit_type",type="String", remark="可编辑提交方式", required=false, maxLength=20, fixed=0, order=25)
	public java.lang.String getEditableSubmitType() {
		return getStr("editable_submit_type");
	}

	/**
	 * 生成状态
	 */
	public M setState(java.lang.Integer state) {
		set("state", state);
		return (M)this;
	}
	
	/**
	 * 生成状态
	 */
	@JBoltField(name="state" ,columnName="state",type="Integer", remark="生成状态", required=true, maxLength=10, fixed=0, order=26)
	public java.lang.Integer getState() {
		return getInt("state");
	}

	/**
	 * 子表数
	 */
	public M setSubTableCount(java.lang.Integer subTableCount) {
		set("sub_table_count", subTableCount);
		return (M)this;
	}
	
	/**
	 * 子表数
	 */
	@JBoltField(name="subTableCount" ,columnName="sub_table_count",type="Integer", remark="子表数", required=false, maxLength=10, fixed=0, order=27)
	public java.lang.Integer getSubTableCount() {
		return getInt("sub_table_count");
	}

	/**
	 * 顶部导航
	 */
	public M setTopnavId(java.lang.Long topnavId) {
		set("topnav_id", topnavId);
		return (M)this;
	}
	
	/**
	 * 顶部导航
	 */
	@JBoltField(name="topnavId" ,columnName="topnav_id",type="Long", remark="顶部导航", required=false, maxLength=19, fixed=0, order=28)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getTopnavId() {
		return getLong("topnav_id");
	}

	/**
	 * 关联权限
	 */
	public M setPermissionId(java.lang.Long permissionId) {
		set("permission_id", permissionId);
		return (M)this;
	}
	
	/**
	 * 关联权限
	 */
	@JBoltField(name="permissionId" ,columnName="permission_id",type="Long", remark="关联权限", required=false, maxLength=19, fixed=0, order=29)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getPermissionId() {
		return getLong("permission_id");
	}

	/**
	 * 可访问角色
	 */
	public M setRoles(java.lang.String roles) {
		set("roles", roles);
		return (M)this;
	}
	
	/**
	 * 可访问角色
	 */
	@JBoltField(name="roles" ,columnName="roles",type="String", remark="可访问角色", required=false, maxLength=255, fixed=0, order=30)
	public java.lang.String getRoles() {
		return getStr("roles");
	}

	/**
	 * 创建人ID
	 */
	public M setCreateUserId(java.lang.Long createUserId) {
		set("create_user_id", createUserId);
		return (M)this;
	}
	
	/**
	 * 创建人ID
	 */
	@JBoltField(name="createUserId" ,columnName="create_user_id",type="Long", remark="创建人ID", required=true, maxLength=19, fixed=0, order=31)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getCreateUserId() {
		return getLong("create_user_id");
	}

	/**
	 * 创建时间
	 */
	public M setCreateTime(java.util.Date createTime) {
		set("create_time", createTime);
		return (M)this;
	}
	
	/**
	 * 创建时间
	 */
	@JBoltField(name="createTime" ,columnName="create_time",type="Date", remark="创建时间", required=true, maxLength=19, fixed=0, order=32)
	public java.util.Date getCreateTime() {
		return getDate("create_time");
	}

	/**
	 * 更新人ID
	 */
	public M setUpdateUserId(java.lang.Long updateUserId) {
		set("update_user_id", updateUserId);
		return (M)this;
	}
	
	/**
	 * 更新人ID
	 */
	@JBoltField(name="updateUserId" ,columnName="update_user_id",type="Long", remark="更新人ID", required=true, maxLength=19, fixed=0, order=33)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getUpdateUserId() {
		return getLong("update_user_id");
	}

	/**
	 * 更新时间
	 */
	public M setUpdateTime(java.util.Date updateTime) {
		set("update_time", updateTime);
		return (M)this;
	}
	
	/**
	 * 更新时间
	 */
	@JBoltField(name="updateTime" ,columnName="update_time",type="Date", remark="更新时间", required=true, maxLength=19, fixed=0, order=34)
	public java.util.Date getUpdateTime() {
		return getDate("update_time");
	}

	/**
	 * 创建后执行生成人ID
	 */
	public M setGenUserId(java.lang.Long genUserId) {
		set("gen_user_id", genUserId);
		return (M)this;
	}
	
	/**
	 * 创建后执行生成人ID
	 */
	@JBoltField(name="genUserId" ,columnName="gen_user_id",type="Long", remark="创建后执行生成人ID", required=false, maxLength=19, fixed=0, order=35)
	@JSONField(serializeUsing= ToStringSerializer.class)
	public java.lang.Long getGenUserId() {
		return getLong("gen_user_id");
	}

	/**
	 * 创建后执行生成时间
	 */
	public M setGenTime(java.util.Date genTime) {
		set("gen_time", genTime);
		return (M)this;
	}
	
	/**
	 * 创建后执行生成时间
	 */
	@JBoltField(name="genTime" ,columnName="gen_time",type="Date", remark="创建后执行生成时间", required=false, maxLength=19, fixed=0, order=36)
	public java.util.Date getGenTime() {
		return getDate("gen_time");
	}

	/**
	 * modelName
	 */
	public M setModelName(java.lang.String modelName) {
		set("model_name", modelName);
		return (M)this;
	}
	
	/**
	 * modelName
	 */
	@JBoltField(name="modelName" ,columnName="model_name",type="String", remark="modelName", required=false, maxLength=64, fixed=0, order=37)
	public java.lang.String getModelName() {
		return getStr("model_name");
	}

	/**
	 * baseModelName
	 */
	public M setBaseModelName(java.lang.String baseModelName) {
		set("base_model_name", baseModelName);
		return (M)this;
	}
	
	/**
	 * baseModelName
	 */
	@JBoltField(name="baseModelName" ,columnName="base_model_name",type="String", remark="baseModelName", required=false, maxLength=64, fixed=0, order=38)
	public java.lang.String getBaseModelName() {
		return getStr("base_model_name");
	}

	/**
	 * 备注
	 */
	public M setRemark(java.lang.String remark) {
		set("remark", remark);
		return (M)this;
	}
	
	/**
	 * 备注
	 */
	@JBoltField(name="remark" ,columnName="remark",type="String", remark="备注", required=false, maxLength=255, fixed=0, order=39)
	public java.lang.String getRemark() {
		return getStr("remark");
	}

	/**
	 * 是否启用autoCache
	 */
	public M setIsAutoCache(java.lang.Boolean isAutoCache) {
		set("is_auto_cache", isAutoCache);
		return (M)this;
	}
	
	/**
	 * 是否启用autoCache
	 */
	@JBoltField(name="isAutoCache" ,columnName="is_auto_cache",type="Boolean", remark="是否启用autoCache", required=true, maxLength=1, fixed=0, order=40)
	public java.lang.Boolean getIsAutoCache() {
		return getBoolean("is_auto_cache");
	}

	/**
	 * 是否启用idCache
	 */
	public M setIsIdCache(java.lang.Boolean isIdCache) {
		set("is_id_cache", isIdCache);
		return (M)this;
	}
	
	/**
	 * 是否启用idCache
	 */
	@JBoltField(name="isIdCache" ,columnName="is_id_cache",type="Boolean", remark="是否启用idCache", required=true, maxLength=1, fixed=0, order=41)
	public java.lang.Boolean getIsIdCache() {
		return getBoolean("is_id_cache");
	}

	/**
	 * 是否启用keyCache
	 */
	public M setIsKeyCache(java.lang.Boolean isKeyCache) {
		set("is_key_cache", isKeyCache);
		return (M)this;
	}
	
	/**
	 * 是否启用keyCache
	 */
	@JBoltField(name="isKeyCache" ,columnName="is_key_cache",type="Boolean", remark="是否启用keyCache", required=true, maxLength=1, fixed=0, order=42)
	public java.lang.Boolean getIsKeyCache() {
		return getBoolean("is_key_cache");
	}

	/**
	 * keyCache指定Column
	 */
	public M setKeyCacheColumn(java.lang.String keyCacheColumn) {
		set("key_cache_column", keyCacheColumn);
		return (M)this;
	}
	
	/**
	 * keyCache指定Column
	 */
	@JBoltField(name="keyCacheColumn" ,columnName="key_cache_column",type="String", remark="keyCache指定Column", required=false, maxLength=40, fixed=0, order=43)
	public java.lang.String getKeyCacheColumn() {
		return getStr("key_cache_column");
	}

	/**
	 * keyCache指定bindColumn
	 */
	public M setKeyCacheBindColumn(java.lang.String keyCacheBindColumn) {
		set("key_cache_bind_column", keyCacheBindColumn);
		return (M)this;
	}
	
	/**
	 * keyCache指定bindColumn
	 */
	@JBoltField(name="keyCacheBindColumn" ,columnName="key_cache_bind_column",type="String", remark="keyCache指定bindColumn", required=false, maxLength=40, fixed=0, order=44)
	public java.lang.String getKeyCacheBindColumn() {
		return getStr("key_cache_bind_column");
	}

	/**
	 * Controller Name
	 */
	public M setControllerName(java.lang.String controllerName) {
		set("controller_name", controllerName);
		return (M)this;
	}
	
	/**
	 * Controller Name
	 */
	@JBoltField(name="controllerName" ,columnName="controller_name",type="String", remark="Controller Name", required=true, maxLength=100, fixed=0, order=45)
	public java.lang.String getControllerName() {
		return getStr("controller_name");
	}

	/**
	 * controller path
	 */
	public M setControllerPath(java.lang.String controllerPath) {
		set("controller_path", controllerPath);
		return (M)this;
	}
	
	/**
	 * controller path
	 */
	@JBoltField(name="controllerPath" ,columnName="controller_path",type="String", remark="controller path", required=true, maxLength=100, fixed=0, order=46)
	public java.lang.String getControllerPath() {
		return getStr("controller_path");
	}

	/**
	 * java主包pacakge
	 */
	public M setMainJavaPackage(java.lang.String mainJavaPackage) {
		set("main_java_package", mainJavaPackage);
		return (M)this;
	}
	
	/**
	 * java主包pacakge
	 */
	@JBoltField(name="mainJavaPackage" ,columnName="main_java_package",type="String", remark="java主包pacakge", required=true, maxLength=100, fixed=0, order=47)
	public java.lang.String getMainJavaPackage() {
		return getStr("main_java_package");
	}

	/**
	 * Service Name
	 */
	public M setServiceName(java.lang.String serviceName) {
		set("service_name", serviceName);
		return (M)this;
	}
	
	/**
	 * Service Name
	 */
	@JBoltField(name="serviceName" ,columnName="service_name",type="String", remark="Service Name", required=true, maxLength=100, fixed=0, order=48)
	public java.lang.String getServiceName() {
		return getStr("service_name");
	}

	/**
	 * Controller代码包
	 */
	public M setControllerPackage(java.lang.String controllerPackage) {
		set("controller_package", controllerPackage);
		return (M)this;
	}
	
	/**
	 * Controller代码包
	 */
	@JBoltField(name="controllerPackage" ,columnName="controller_package",type="String", remark="Controller代码包", required=true, maxLength=255, fixed=0, order=49)
	public java.lang.String getControllerPackage() {
		return getStr("controller_package");
	}

	/**
	 * Service代码包
	 */
	public M setServicePackage(java.lang.String servicePackage) {
		set("service_package", servicePackage);
		return (M)this;
	}
	
	/**
	 * Service代码包
	 */
	@JBoltField(name="servicePackage" ,columnName="service_package",type="String", remark="Service代码包", required=true, maxLength=255, fixed=0, order=50)
	public java.lang.String getServicePackage() {
		return getStr("service_package");
	}

	/**
	 * index.html标题icon
	 */
	public M setIndexHtmlPageIcon(java.lang.String indexHtmlPageIcon) {
		set("index_html_page_icon", indexHtmlPageIcon);
		return (M)this;
	}
	
	/**
	 * index.html标题icon
	 */
	@JBoltField(name="indexHtmlPageIcon" ,columnName="index_html_page_icon",type="String", remark="index.html标题icon", required=false, maxLength=60, fixed=0, order=51)
	public java.lang.String getIndexHtmlPageIcon() {
		return getStr("index_html_page_icon");
	}

	/**
	 * index.html页面标题
	 */
	public M setIndexHtmlPageTitle(java.lang.String indexHtmlPageTitle) {
		set("index_html_page_title", indexHtmlPageTitle);
		return (M)this;
	}
	
	/**
	 * index.html页面标题
	 */
	@JBoltField(name="indexHtmlPageTitle" ,columnName="index_html_page_title",type="String", remark="index.html页面标题", required=false, maxLength=40, fixed=0, order=52)
	public java.lang.String getIndexHtmlPageTitle() {
		return getStr("index_html_page_title");
	}

	/**
	 * model 所属package
	 */
	public M setModelPackage(java.lang.String modelPackage) {
		set("model_package", modelPackage);
		return (M)this;
	}
	
	/**
	 * model 所属package
	 */
	@JBoltField(name="modelPackage" ,columnName="model_package",type="String", remark="model 所属package", required=false, maxLength=255, fixed=0, order=53)
	public java.lang.String getModelPackage() {
		return getStr("model_package");
	}

	/**
	 * html view path
	 */
	public M setHtmlViewPath(java.lang.String htmlViewPath) {
		set("html_view_path", htmlViewPath);
		return (M)this;
	}
	
	/**
	 * html view path
	 */
	@JBoltField(name="htmlViewPath" ,columnName="html_view_path",type="String", remark="html view path", required=false, maxLength=255, fixed=0, order=54)
	public java.lang.String getHtmlViewPath() {
		return getStr("html_view_path");
	}

	/**
	 * 路由扫描包
	 */
	public M setRoutesScanPackage(java.lang.String routesScanPackage) {
		set("routes_scan_package", routesScanPackage);
		return (M)this;
	}
	
	/**
	 * 路由扫描包
	 */
	@JBoltField(name="routesScanPackage" ,columnName="routes_scan_package",type="String", remark="路由扫描包", required=false, maxLength=255, fixed=0, order=55)
	public java.lang.String getRoutesScanPackage() {
		return getStr("routes_scan_package");
	}

	/**
	 * 是否需要生成Model
	 */
	public M setIsGenModel(java.lang.Boolean isGenModel) {
		set("is_gen_model", isGenModel);
		return (M)this;
	}
	
	/**
	 * 是否需要生成Model
	 */
	@JBoltField(name="isGenModel" ,columnName="is_gen_model",type="Boolean", remark="是否需要生成Model", required=true, maxLength=1, fixed=0, order=56)
	public java.lang.Boolean getIsGenModel() {
		return getBoolean("is_gen_model");
	}

	/**
	 * 表格是否使用record
	 */
	public M setIsTableUseRecord(java.lang.Boolean isTableUseRecord) {
		set("is_table_use_record", isTableUseRecord);
		return (M)this;
	}
	
	/**
	 * 表格是否使用record
	 */
	@JBoltField(name="isTableUseRecord" ,columnName="is_table_use_record",type="Boolean", remark="表格是否使用record", required=true, maxLength=1, fixed=0, order=57)
	public java.lang.Boolean getIsTableUseRecord() {
		return getBoolean("is_table_use_record");
	}

	/**
	 * 表格列名用驼峰的attrName
	 */
	public M setIsTableRecordCamelCase(java.lang.Boolean isTableRecordCamelCase) {
		set("is_table_record_camel_case", isTableRecordCamelCase);
		return (M)this;
	}
	
	/**
	 * 表格列名用驼峰的attrName
	 */
	@JBoltField(name="isTableRecordCamelCase" ,columnName="is_table_record_camel_case",type="Boolean", remark="表格列名用驼峰的attrName", required=true, maxLength=1, fixed=0, order=58)
	public java.lang.Boolean getIsTableRecordCamelCase() {
		return getBoolean("is_table_record_camel_case");
	}

	/**
	 * 是否支持Excel导入
	 */
	public M setIsImportExcel(java.lang.Boolean isImportExcel) {
		set("is_import_excel", isImportExcel);
		return (M)this;
	}
	
	/**
	 * 是否支持Excel导入
	 */
	@JBoltField(name="isImportExcel" ,columnName="is_import_excel",type="Boolean", remark="是否支持Excel导入", required=true, maxLength=1, fixed=0, order=59)
	public java.lang.Boolean getIsImportExcel() {
		return getBoolean("is_import_excel");
	}

	/**
	 * 是否支持Excel导出
	 */
	public M setIsExportExcel(java.lang.Boolean isExportExcel) {
		set("is_export_excel", isExportExcel);
		return (M)this;
	}
	
	/**
	 * 是否支持Excel导出
	 */
	@JBoltField(name="isExportExcel" ,columnName="is_export_excel",type="Boolean", remark="是否支持Excel导出", required=true, maxLength=1, fixed=0, order=60)
	public java.lang.Boolean getIsExportExcel() {
		return getBoolean("is_export_excel");
	}

	/**
	 * 是否启用 导出选中行功能
	 */
	public M setIsExportExcelByCheckedIds(java.lang.Boolean isExportExcelByCheckedIds) {
		set("is_export_excel_by_checked_ids", isExportExcelByCheckedIds);
		return (M)this;
	}
	
	/**
	 * 是否启用 导出选中行功能
	 */
	@JBoltField(name="isExportExcelByCheckedIds" ,columnName="is_export_excel_by_checked_ids",type="Boolean", remark="是否启用 导出选中行功能", required=true, maxLength=1, fixed=0, order=61)
	public java.lang.Boolean getIsExportExcelByCheckedIds() {
		return getBoolean("is_export_excel_by_checked_ids");
	}

	/**
	 * 是否启用导出表单查询结果功能
	 */
	public M setIsExportExcelByForm(java.lang.Boolean isExportExcelByForm) {
		set("is_export_excel_by_form", isExportExcelByForm);
		return (M)this;
	}
	
	/**
	 * 是否启用导出表单查询结果功能
	 */
	@JBoltField(name="isExportExcelByForm" ,columnName="is_export_excel_by_form",type="Boolean", remark="是否启用导出表单查询结果功能", required=true, maxLength=1, fixed=0, order=62)
	public java.lang.Boolean getIsExportExcelByForm() {
		return getBoolean("is_export_excel_by_form");
	}

	/**
	 * 是否启用导出所有数据
	 */
	public M setIsExportExcelAll(java.lang.Boolean isExportExcelAll) {
		set("is_export_excel_all", isExportExcelAll);
		return (M)this;
	}
	
	/**
	 * 是否启用导出所有数据
	 */
	@JBoltField(name="isExportExcelAll" ,columnName="is_export_excel_all",type="Boolean", remark="是否启用导出所有数据", required=true, maxLength=1, fixed=0, order=63)
	public java.lang.Boolean getIsExportExcelAll() {
		return getBoolean("is_export_excel_all");
	}

	/**
	 * 是否支持表格复制到excel
	 */
	public M setIsCopyToExcel(java.lang.Boolean isCopyToExcel) {
		set("is_copy_to_excel", isCopyToExcel);
		return (M)this;
	}
	
	/**
	 * 是否支持表格复制到excel
	 */
	@JBoltField(name="isCopyToExcel" ,columnName="is_copy_to_excel",type="Boolean", remark="是否支持表格复制到excel", required=true, maxLength=1, fixed=0, order=64)
	public java.lang.Boolean getIsCopyToExcel() {
		return getBoolean("is_copy_to_excel");
	}

	/**
	 * 是否支持从excel复制到可编辑表格
	 */
	public M setIsCopyFromExcel(java.lang.Boolean isCopyFromExcel) {
		set("is_copy_from_excel", isCopyFromExcel);
		return (M)this;
	}
	
	/**
	 * 是否支持从excel复制到可编辑表格
	 */
	@JBoltField(name="isCopyFromExcel" ,columnName="is_copy_from_excel",type="Boolean", remark="是否支持从excel复制到可编辑表格", required=true, maxLength=1, fixed=0, order=65)
	public java.lang.Boolean getIsCopyFromExcel() {
		return getBoolean("is_copy_from_excel");
	}

	/**
	 * 是否使用toolbar模式
	 */
	public M setIsToolbar(java.lang.Boolean isToolbar) {
		set("is_toolbar", isToolbar);
		return (M)this;
	}
	
	/**
	 * 是否使用toolbar模式
	 */
	@JBoltField(name="isToolbar" ,columnName="is_toolbar",type="Boolean", remark="是否使用toolbar模式", required=true, maxLength=1, fixed=0, order=66)
	public java.lang.Boolean getIsToolbar() {
		return getBoolean("is_toolbar");
	}

	/**
	 * 是否使用headbox
	 */
	public M setIsHeadbox(java.lang.Boolean isHeadbox) {
		set("is_headbox", isHeadbox);
		return (M)this;
	}
	
	/**
	 * 是否使用headbox
	 */
	@JBoltField(name="isHeadbox" ,columnName="is_headbox",type="Boolean", remark="是否使用headbox", required=true, maxLength=1, fixed=0, order=67)
	public java.lang.Boolean getIsHeadbox() {
		return getBoolean("is_headbox");
	}

	/**
	 * 是否使用leftBox
	 */
	public M setIsLeftbox(java.lang.Boolean isLeftbox) {
		set("is_leftbox", isLeftbox);
		return (M)this;
	}
	
	/**
	 * 是否使用leftBox
	 */
	@JBoltField(name="isLeftbox" ,columnName="is_leftbox",type="Boolean", remark="是否使用leftBox", required=true, maxLength=1, fixed=0, order=68)
	public java.lang.Boolean getIsLeftbox() {
		return getBoolean("is_leftbox");
	}

	/**
	 * 是否使用rightBox
	 */
	public M setIsRightbox(java.lang.Boolean isRightbox) {
		set("is_rightbox", isRightbox);
		return (M)this;
	}
	
	/**
	 * 是否使用rightBox
	 */
	@JBoltField(name="isRightbox" ,columnName="is_rightbox",type="Boolean", remark="是否使用rightBox", required=true, maxLength=1, fixed=0, order=69)
	public java.lang.Boolean getIsRightbox() {
		return getBoolean("is_rightbox");
	}

	/**
	 * 是否使用footbox
	 */
	public M setIsFootbox(java.lang.Boolean isFootbox) {
		set("is_footbox", isFootbox);
		return (M)this;
	}
	
	/**
	 * 是否使用footbox
	 */
	@JBoltField(name="isFootbox" ,columnName="is_footbox",type="Boolean", remark="是否使用footbox", required=true, maxLength=1, fixed=0, order=70)
	public java.lang.Boolean getIsFootbox() {
		return getBoolean("is_footbox");
	}

	/**
	 * 是否分页查询
	 */
	public M setIsPaginate(java.lang.Boolean isPaginate) {
		set("is_paginate", isPaginate);
		return (M)this;
	}
	
	/**
	 * 是否分页查询
	 */
	@JBoltField(name="isPaginate" ,columnName="is_paginate",type="Boolean", remark="是否分页查询", required=true, maxLength=1, fixed=0, order=71)
	public java.lang.Boolean getIsPaginate() {
		return getBoolean("is_paginate");
	}

	/**
	 * 是否开启移动排序功能
	 */
	public M setIsTableSortableMove(java.lang.Boolean isTableSortableMove) {
		set("is_table_sortable_move", isTableSortableMove);
		return (M)this;
	}
	
	/**
	 * 是否开启移动排序功能
	 */
	@JBoltField(name="isTableSortableMove" ,columnName="is_table_sortable_move",type="Boolean", remark="是否开启移动排序功能", required=true, maxLength=1, fixed=0, order=72)
	public java.lang.Boolean getIsTableSortableMove() {
		return getBoolean("is_table_sortable_move");
	}

	/**
	 * leftbox width
	 */
	public M setLeftboxWidth(java.lang.Integer leftboxWidth) {
		set("leftbox_width", leftboxWidth);
		return (M)this;
	}
	
	/**
	 * leftbox width
	 */
	@JBoltField(name="leftboxWidth" ,columnName="leftbox_width",type="Integer", remark="leftbox width", required=false, maxLength=10, fixed=0, order=73)
	public java.lang.Integer getLeftboxWidth() {
		return getInt("leftbox_width");
	}

	/**
	 * right width
	 */
	public M setRightboxWidth(java.lang.Integer rightboxWidth) {
		set("rightbox_width", rightboxWidth);
		return (M)this;
	}
	
	/**
	 * right width
	 */
	@JBoltField(name="rightboxWidth" ,columnName="rightbox_width",type="Integer", remark="right width", required=false, maxLength=10, fixed=0, order=74)
	public java.lang.Integer getRightboxWidth() {
		return getInt("rightbox_width");
	}

	/**
	 * headbox height
	 */
	public M setHeadboxHeight(java.lang.Integer headboxHeight) {
		set("headbox_height", headboxHeight);
		return (M)this;
	}
	
	/**
	 * headbox height
	 */
	@JBoltField(name="headboxHeight" ,columnName="headbox_height",type="Integer", remark="headbox height", required=false, maxLength=10, fixed=0, order=75)
	public java.lang.Integer getHeadboxHeight() {
		return getInt("headbox_height");
	}

	/**
	 * footbox height
	 */
	public M setFootboxHeight(java.lang.Integer footboxHeight) {
		set("footbox_height", footboxHeight);
		return (M)this;
	}
	
	/**
	 * footbox height
	 */
	@JBoltField(name="footboxHeight" ,columnName="footbox_height",type="Integer", remark="footbox height", required=false, maxLength=10, fixed=0, order=76)
	public java.lang.Integer getFootboxHeight() {
		return getInt("footbox_height");
	}

	/**
	 * 是否启用leftbox的footer
	 */
	public M setIsLeftboxFooter(java.lang.Boolean isLeftboxFooter) {
		set("is_leftbox_footer", isLeftboxFooter);
		return (M)this;
	}
	
	/**
	 * 是否启用leftbox的footer
	 */
	@JBoltField(name="isLeftboxFooter" ,columnName="is_leftbox_footer",type="Boolean", remark="是否启用leftbox的footer", required=true, maxLength=1, fixed=0, order=77)
	public java.lang.Boolean getIsLeftboxFooter() {
		return getBoolean("is_leftbox_footer");
	}

	/**
	 * 是否启用rightbox的footer
	 */
	public M setIsRightboxFooter(java.lang.Boolean isRightboxFooter) {
		set("is_rightbox_footer", isRightboxFooter);
		return (M)this;
	}
	
	/**
	 * 是否启用rightbox的footer
	 */
	@JBoltField(name="isRightboxFooter" ,columnName="is_rightbox_footer",type="Boolean", remark="是否启用rightbox的footer", required=true, maxLength=1, fixed=0, order=78)
	public java.lang.Boolean getIsRightboxFooter() {
		return getBoolean("is_rightbox_footer");
	}

	/**
	 * leftbox footer button count
	 */
	public M setLeftboxFooterButtonCount(java.lang.Integer leftboxFooterButtonCount) {
		set("leftbox_footer_button_count", leftboxFooterButtonCount);
		return (M)this;
	}
	
	/**
	 * leftbox footer button count
	 */
	@JBoltField(name="leftboxFooterButtonCount" ,columnName="leftbox_footer_button_count",type="Integer", remark="leftbox footer button count", required=false, maxLength=10, fixed=0, order=79)
	public java.lang.Integer getLeftboxFooterButtonCount() {
		return getInt("leftbox_footer_button_count");
	}

	/**
	 * rightbox footer button count
	 */
	public M setRightboxFooterButtonCount(java.lang.Integer rightboxFooterButtonCount) {
		set("rightbox_footer_button_count", rightboxFooterButtonCount);
		return (M)this;
	}
	
	/**
	 * rightbox footer button count
	 */
	@JBoltField(name="rightboxFooterButtonCount" ,columnName="rightbox_footer_button_count",type="Integer", remark="rightbox footer button count", required=false, maxLength=10, fixed=0, order=80)
	public java.lang.Integer getRightboxFooterButtonCount() {
		return getInt("rightbox_footer_button_count");
	}

	/**
	 * leftbox title
	 */
	public M setLeftboxTitle(java.lang.String leftboxTitle) {
		set("leftbox_title", leftboxTitle);
		return (M)this;
	}
	
	/**
	 * leftbox title
	 */
	@JBoltField(name="leftboxTitle" ,columnName="leftbox_title",type="String", remark="leftbox title", required=false, maxLength=40, fixed=0, order=81)
	public java.lang.String getLeftboxTitle() {
		return getStr("leftbox_title");
	}

	/**
	 * leftbox icon
	 */
	public M setLeftboxIcon(java.lang.String leftboxIcon) {
		set("leftbox_icon", leftboxIcon);
		return (M)this;
	}
	
	/**
	 * leftbox icon
	 */
	@JBoltField(name="leftboxIcon" ,columnName="leftbox_icon",type="String", remark="leftbox icon", required=false, maxLength=60, fixed=0, order=82)
	public java.lang.String getLeftboxIcon() {
		return getStr("leftbox_icon");
	}

	/**
	 * rightbox title
	 */
	public M setRightboxTitle(java.lang.String rightboxTitle) {
		set("rightbox_title", rightboxTitle);
		return (M)this;
	}
	
	/**
	 * rightbox title
	 */
	@JBoltField(name="rightboxTitle" ,columnName="rightbox_title",type="String", remark="rightbox title", required=false, maxLength=40, fixed=0, order=83)
	public java.lang.String getRightboxTitle() {
		return getStr("rightbox_title");
	}

	/**
	 * rightbox icon
	 */
	public M setRightboxIcon(java.lang.String rightboxIcon) {
		set("rightbox_icon", rightboxIcon);
		return (M)this;
	}
	
	/**
	 * rightbox icon
	 */
	@JBoltField(name="rightboxIcon" ,columnName="rightbox_icon",type="String", remark="rightbox icon", required=false, maxLength=60, fixed=0, order=84)
	public java.lang.String getRightboxIcon() {
		return getStr("rightbox_icon");
	}

	/**
	 * 是否开启操作列排序功能
	 */
	public M setIsShowOptcolSort(java.lang.Boolean isShowOptcolSort) {
		set("is_show_optcol_sort", isShowOptcolSort);
		return (M)this;
	}
	
	/**
	 * 是否开启操作列排序功能
	 */
	@JBoltField(name="isShowOptcolSort" ,columnName="is_show_optcol_sort",type="Boolean", remark="是否开启操作列排序功能", required=true, maxLength=1, fixed=0, order=85)
	public java.lang.Boolean getIsShowOptcolSort() {
		return getBoolean("is_show_optcol_sort");
	}

	/**
	 * 是否开启操作列显示编辑按钮
	 */
	public M setIsShowOptcolEdit(java.lang.Boolean isShowOptcolEdit) {
		set("is_show_optcol_edit", isShowOptcolEdit);
		return (M)this;
	}
	
	/**
	 * 是否开启操作列显示编辑按钮
	 */
	@JBoltField(name="isShowOptcolEdit" ,columnName="is_show_optcol_edit",type="Boolean", remark="是否开启操作列显示编辑按钮", required=true, maxLength=1, fixed=0, order=86)
	public java.lang.Boolean getIsShowOptcolEdit() {
		return getBoolean("is_show_optcol_edit");
	}

	/**
	 * 是否开启操作列显示删除按钮
	 */
	public M setIsShowOptcolDel(java.lang.Boolean isShowOptcolDel) {
		set("is_show_optcol_del", isShowOptcolDel);
		return (M)this;
	}
	
	/**
	 * 是否开启操作列显示删除按钮
	 */
	@JBoltField(name="isShowOptcolDel" ,columnName="is_show_optcol_del",type="Boolean", remark="是否开启操作列显示删除按钮", required=true, maxLength=1, fixed=0, order=87)
	public java.lang.Boolean getIsShowOptcolDel() {
		return getBoolean("is_show_optcol_del");
	}

	/**
	 * 是否显示操作列
	 */
	public M setIsShowOptcol(java.lang.Boolean isShowOptcol) {
		set("is_show_optcol", isShowOptcol);
		return (M)this;
	}
	
	/**
	 * 是否显示操作列
	 */
	@JBoltField(name="isShowOptcol" ,columnName="is_show_optcol",type="Boolean", remark="是否显示操作列", required=true, maxLength=1, fixed=0, order=88)
	public java.lang.Boolean getIsShowOptcol() {
		return getBoolean("is_show_optcol");
	}

	/**
	 * 是否显示操作列的恢复按钮
	 */
	public M setIsShowOptcolRecover(java.lang.Boolean isShowOptcolRecover) {
		set("is_show_optcol_recover", isShowOptcolRecover);
		return (M)this;
	}
	
	/**
	 * 是否显示操作列的恢复按钮
	 */
	@JBoltField(name="isShowOptcolRecover" ,columnName="is_show_optcol_recover",type="Boolean", remark="是否显示操作列的恢复按钮", required=true, maxLength=1, fixed=0, order=89)
	public java.lang.Boolean getIsShowOptcolRecover() {
		return getBoolean("is_show_optcol_recover");
	}

	/**
	 * 默认排序字段
	 */
	public M setDefaultSortColumn(java.lang.String defaultSortColumn) {
		set("default_sort_column", defaultSortColumn);
		return (M)this;
	}
	
	/**
	 * 默认排序字段
	 */
	@JBoltField(name="defaultSortColumn" ,columnName="default_sort_column",type="String", remark="默认排序字段", required=false, maxLength=40, fixed=0, order=90)
	public java.lang.String getDefaultSortColumn() {
		return getStr("default_sort_column");
	}

	/**
	 * 默认排序方式
	 */
	public M setDefaultSortType(java.lang.String defaultSortType) {
		set("default_sort_type", defaultSortType);
		return (M)this;
	}
	
	/**
	 * 默认排序方式
	 */
	@JBoltField(name="defaultSortType" ,columnName="default_sort_type",type="String", remark="默认排序方式", required=false, maxLength=40, fixed=0, order=91)
	public java.lang.String getDefaultSortType() {
		return getStr("default_sort_type");
	}

	/**
	 * 长度
	 */
	public M setTableOptcolWidth(java.lang.Integer tableOptcolWidth) {
		set("table_optcol_width", tableOptcolWidth);
		return (M)this;
	}
	
	/**
	 * 长度
	 */
	@JBoltField(name="tableOptcolWidth" ,columnName="table_optcol_width",type="Integer", remark="长度", required=true, maxLength=10, fixed=0, order=92)
	public java.lang.Integer getTableOptcolWidth() {
		return getInt("table_optcol_width");
	}

	/**
	 * 表格是否开启调整列宽功能
	 */
	public M setIsTableColumnResize(java.lang.Boolean isTableColumnResize) {
		set("is_table_column_resize", isTableColumnResize);
		return (M)this;
	}
	
	/**
	 * 表格是否开启调整列宽功能
	 */
	@JBoltField(name="isTableColumnResize" ,columnName="is_table_column_resize",type="Boolean", remark="表格是否开启调整列宽功能", required=true, maxLength=1, fixed=0, order=93)
	public java.lang.Boolean getIsTableColumnResize() {
		return getBoolean("is_table_column_resize");
	}

	/**
	 * 是否增加填充列
	 */
	public M setIsTablePrependColumn(java.lang.Boolean isTablePrependColumn) {
		set("is_table_prepend_column", isTablePrependColumn);
		return (M)this;
	}
	
	/**
	 * 是否增加填充列
	 */
	@JBoltField(name="isTablePrependColumn" ,columnName="is_table_prepend_column",type="Boolean", remark="是否增加填充列", required=true, maxLength=1, fixed=0, order=94)
	public java.lang.Boolean getIsTablePrependColumn() {
		return getBoolean("is_table_prepend_column");
	}

	/**
	 * 表格chechbox radio配置类型
	 */
	public M setTablePrependColumnType(java.lang.String tablePrependColumnType) {
		set("table_prepend_column_type", tablePrependColumnType);
		return (M)this;
	}
	
	/**
	 * 表格chechbox radio配置类型
	 */
	@JBoltField(name="tablePrependColumnType" ,columnName="table_prepend_column_type",type="String", remark="表格chechbox radio配置类型", required=false, maxLength=40, fixed=0, order=95)
	public java.lang.String getTablePrependColumnType() {
		return getStr("table_prepend_column_type");
	}

	/**
	 * 填充列到第几列
	 */
	public M setTablePrependColumnIndex(java.lang.Integer tablePrependColumnIndex) {
		set("table_prepend_column_index", tablePrependColumnIndex);
		return (M)this;
	}
	
	/**
	 * 填充列到第几列
	 */
	@JBoltField(name="tablePrependColumnIndex" ,columnName="table_prepend_column_index",type="Integer", remark="填充列到第几列", required=true, maxLength=10, fixed=0, order=96)
	public java.lang.Integer getTablePrependColumnIndex() {
		return getInt("table_prepend_column_index");
	}

	/**
	 * 填充列linkparent
	 */
	public M setIsTablePrependColumnLinkparent(java.lang.Boolean isTablePrependColumnLinkparent) {
		set("is_table_prepend_column_linkparent", isTablePrependColumnLinkparent);
		return (M)this;
	}
	
	/**
	 * 填充列linkparent
	 */
	@JBoltField(name="isTablePrependColumnLinkparent" ,columnName="is_table_prepend_column_linkparent",type="Boolean", remark="填充列linkparent", required=true, maxLength=1, fixed=0, order=97)
	public java.lang.Boolean getIsTablePrependColumnLinkparent() {
		return getBoolean("is_table_prepend_column_linkparent");
	}

	/**
	 * 填充列linkson
	 */
	public M setIsTablePrependColumnLinkson(java.lang.Boolean isTablePrependColumnLinkson) {
		set("is_table_prepend_column_linkson", isTablePrependColumnLinkson);
		return (M)this;
	}
	
	/**
	 * 填充列linkson
	 */
	@JBoltField(name="isTablePrependColumnLinkson" ,columnName="is_table_prepend_column_linkson",type="Boolean", remark="填充列linkson", required=true, maxLength=1, fixed=0, order=98)
	public java.lang.Boolean getIsTablePrependColumnLinkson() {
		return getBoolean("is_table_prepend_column_linkson");
	}

	/**
	 * 填充列表头是几行rowspan
	 */
	public M setTablePrependColumnRowspan(java.lang.Integer tablePrependColumnRowspan) {
		set("table_prepend_column_rowspan", tablePrependColumnRowspan);
		return (M)this;
	}
	
	/**
	 * 填充列表头是几行rowspan
	 */
	@JBoltField(name="tablePrependColumnRowspan" ,columnName="table_prepend_column_rowspan",type="Integer", remark="填充列表头是几行rowspan", required=true, maxLength=10, fixed=0, order=99)
	public java.lang.Integer getTablePrependColumnRowspan() {
		return getInt("table_prepend_column_rowspan");
	}

	/**
	 * 是否点击行就切换列填充组件选中状态
	 */
	public M setIsTablePrependColumnClickActive(java.lang.Boolean isTablePrependColumnClickActive) {
		set("is_table_prepend_column_click_active", isTablePrependColumnClickActive);
		return (M)this;
	}
	
	/**
	 * 是否点击行就切换列填充组件选中状态
	 */
	@JBoltField(name="isTablePrependColumnClickActive" ,columnName="is_table_prepend_column_click_active",type="Boolean", remark="是否点击行就切换列填充组件选中状态", required=true, maxLength=1, fixed=0, order=100)
	public java.lang.Boolean getIsTablePrependColumnClickActive() {
		return getBoolean("is_table_prepend_column_click_active");
	}

	/**
	 * 左侧固定列
	 */
	public M setTableFixedColumnLeft(java.lang.String tableFixedColumnLeft) {
		set("table_fixed_column_left", tableFixedColumnLeft);
		return (M)this;
	}
	
	/**
	 * 左侧固定列
	 */
	@JBoltField(name="tableFixedColumnLeft" ,columnName="table_fixed_column_left",type="String", remark="左侧固定列", required=false, maxLength=40, fixed=0, order=101)
	public java.lang.String getTableFixedColumnLeft() {
		return getStr("table_fixed_column_left");
	}

	/**
	 * 右侧固定列
	 */
	public M setTableFixedColumnRight(java.lang.String tableFixedColumnRight) {
		set("table_fixed_column_right", tableFixedColumnRight);
		return (M)this;
	}
	
	/**
	 * 右侧固定列
	 */
	@JBoltField(name="tableFixedColumnRight" ,columnName="table_fixed_column_right",type="String", remark="右侧固定列", required=false, maxLength=40, fixed=0, order=102)
	public java.lang.String getTableFixedColumnRight() {
		return getStr("table_fixed_column_right");
	}

	/**
	 * 分页pagesize自定义设置
	 */
	public M setTablePagesizeOptions(java.lang.String tablePagesizeOptions) {
		set("table_pagesize_options", tablePagesizeOptions);
		return (M)this;
	}
	
	/**
	 * 分页pagesize自定义设置
	 */
	@JBoltField(name="tablePagesizeOptions" ,columnName="table_pagesize_options",type="String", remark="分页pagesize自定义设置", required=false, maxLength=255, fixed=0, order=103)
	public java.lang.String getTablePagesizeOptions() {
		return getStr("table_pagesize_options");
	}

	/**
	 * 表格宽度自定义值
	 */
	public M setTableWidthAssign(java.lang.String tableWidthAssign) {
		set("table_width_assign", tableWidthAssign);
		return (M)this;
	}
	
	/**
	 * 表格宽度自定义值
	 */
	@JBoltField(name="tableWidthAssign" ,columnName="table_width_assign",type="String", remark="表格宽度自定义值", required=false, maxLength=40, fixed=0, order=104)
	public java.lang.String getTableWidthAssign() {
		return getStr("table_width_assign");
	}

	/**
	 * 表格宽度
	 */
	public M setTableWidth(java.lang.String tableWidth) {
		set("table_width", tableWidth);
		return (M)this;
	}
	
	/**
	 * 表格宽度
	 */
	@JBoltField(name="tableWidth" ,columnName="table_width",type="String", remark="表格宽度", required=true, maxLength=40, fixed=0, order=105)
	public java.lang.String getTableWidth() {
		return getStr("table_width");
	}

	/**
	 * 表格高度自定义值
	 */
	public M setTableHeightAssign(java.lang.String tableHeightAssign) {
		set("table_height_assign", tableHeightAssign);
		return (M)this;
	}
	
	/**
	 * 表格高度自定义值
	 */
	@JBoltField(name="tableHeightAssign" ,columnName="table_height_assign",type="String", remark="表格高度自定义值", required=false, maxLength=40, fixed=0, order=106)
	public java.lang.String getTableHeightAssign() {
		return getStr("table_height_assign");
	}

	/**
	 * 表格高度
	 */
	public M setTableHeight(java.lang.String tableHeight) {
		set("table_height", tableHeight);
		return (M)this;
	}
	
	/**
	 * 表格高度
	 */
	@JBoltField(name="tableHeight" ,columnName="table_height",type="String", remark="表格高度", required=true, maxLength=40, fixed=0, order=107)
	public java.lang.String getTableHeight() {
		return getStr("table_height");
	}

	/**
	 * 表格默认排序字段
	 */
	public M setTableDefaultSortColumn(java.lang.String tableDefaultSortColumn) {
		set("table_default_sort_column", tableDefaultSortColumn);
		return (M)this;
	}
	
	/**
	 * 表格默认排序字段
	 */
	@JBoltField(name="tableDefaultSortColumn" ,columnName="table_default_sort_column",type="String", remark="表格默认排序字段", required=false, maxLength=60, fixed=0, order=108)
	public java.lang.String getTableDefaultSortColumn() {
		return getStr("table_default_sort_column");
	}

	/**
	 * 表格默认排序类型
	 */
	public M setTableDefaultSortType(java.lang.String tableDefaultSortType) {
		set("table_default_sort_type", tableDefaultSortType);
		return (M)this;
	}
	
	/**
	 * 表格默认排序类型
	 */
	@JBoltField(name="tableDefaultSortType" ,columnName="table_default_sort_type",type="String", remark="表格默认排序类型", required=false, maxLength=40, fixed=0, order=109)
	public java.lang.String getTableDefaultSortType() {
		return getStr("table_default_sort_type");
	}

	/**
	 * 是否开启关键词查询
	 */
	public M setIsKeywordsSearch(java.lang.Boolean isKeywordsSearch) {
		set("is_keywords_search", isKeywordsSearch);
		return (M)this;
	}
	
	/**
	 * 是否开启关键词查询
	 */
	@JBoltField(name="isKeywordsSearch" ,columnName="is_keywords_search",type="Boolean", remark="是否开启关键词查询", required=true, maxLength=1, fixed=0, order=110)
	public java.lang.Boolean getIsKeywordsSearch() {
		return getBoolean("is_keywords_search");
	}

	/**
	 * 关键词匹配列
	 */
	public M setKeywordsMatchColumns(java.lang.String keywordsMatchColumns) {
		set("keywords_match_columns", keywordsMatchColumns);
		return (M)this;
	}
	
	/**
	 * 关键词匹配列
	 */
	@JBoltField(name="keywordsMatchColumns" ,columnName="keywords_match_columns",type="String", remark="关键词匹配列", required=false, maxLength=255, fixed=0, order=111)
	public java.lang.String getKeywordsMatchColumns() {
		return getStr("keywords_match_columns");
	}

	/**
	 * toolbar 额外预留按钮个数
	 */
	public M setToolbarExtraButtonSize(java.lang.Integer toolbarExtraButtonSize) {
		set("toolbar_extra_button_size", toolbarExtraButtonSize);
		return (M)this;
	}
	
	/**
	 * toolbar 额外预留按钮个数
	 */
	@JBoltField(name="toolbarExtraButtonSize" ,columnName="toolbar_extra_button_size",type="Integer", remark="toolbar 额外预留按钮个数", required=false, maxLength=10, fixed=0, order=112)
	public java.lang.Integer getToolbarExtraButtonSize() {
		return getInt("toolbar_extra_button_size");
	}

	/**
	 * 删除标识
	 */
	public M setIsDeleted(java.lang.Boolean isDeleted) {
		set("is_deleted", isDeleted);
		return (M)this;
	}
	
	/**
	 * 删除标识
	 */
	@JBoltField(name="isDeleted" ,columnName="is_deleted",type="Boolean", remark="删除标识", required=true, maxLength=1, fixed=0, order=113)
	public java.lang.Boolean getIsDeleted() {
		return getBoolean("is_deleted");
	}

	/**
	 * 表单分几列
	 */
	public M setFormColumnSize(java.lang.Integer formColumnSize) {
		set("form_column_size", formColumnSize);
		return (M)this;
	}
	
	/**
	 * 表单分几列
	 */
	@JBoltField(name="formColumnSize" ,columnName="form_column_size",type="Integer", remark="表单分几列", required=true, maxLength=10, fixed=0, order=114)
	public java.lang.Integer getFormColumnSize() {
		return getInt("form_column_size");
	}

	/**
	 * 表单form-group风格 左右还是上下
	 */
	public M setIsFormGroupRow(java.lang.Boolean isFormGroupRow) {
		set("is_form_group_row", isFormGroupRow);
		return (M)this;
	}
	
	/**
	 * 表单form-group风格 左右还是上下
	 */
	@JBoltField(name="isFormGroupRow" ,columnName="is_form_group_row",type="Boolean", remark="表单form-group风格 左右还是上下", required=true, maxLength=1, fixed=0, order=115)
	public java.lang.Boolean getIsFormGroupRow() {
		return getBoolean("is_form_group_row");
	}

	/**
	 * 表单分多列 比例值
	 */
	public M setFormColumnProportion(java.lang.String formColumnProportion) {
		set("form_column_proportion", formColumnProportion);
		return (M)this;
	}
	
	/**
	 * 表单分多列 比例值
	 */
	@JBoltField(name="formColumnProportion" ,columnName="form_column_proportion",type="String", remark="表单分多列 比例值", required=false, maxLength=40, fixed=0, order=116)
	public java.lang.String getFormColumnProportion() {
		return getStr("form_column_proportion");
	}

	/**
	 * 表单列排布方向 横向还是纵向
	 */
	public M setFormColumnDirection(java.lang.String formColumnDirection) {
		set("form_column_direction", formColumnDirection);
		return (M)this;
	}
	
	/**
	 * 表单列排布方向 横向还是纵向
	 */
	@JBoltField(name="formColumnDirection" ,columnName="form_column_direction",type="String", remark="表单列排布方向 横向还是纵向", required=false, maxLength=10, fixed=0, order=117)
	public java.lang.String getFormColumnDirection() {
		return getStr("form_column_direction");
	}

	/**
	 * form-group row状态下的比例
	 */
	public M setFormGroupProportion(java.lang.String formGroupProportion) {
		set("form_group_proportion", formGroupProportion);
		return (M)this;
	}
	
	/**
	 * form-group row状态下的比例
	 */
	@JBoltField(name="formGroupProportion" ,columnName="form_group_proportion",type="String", remark="form-group row状态下的比例", required=false, maxLength=40, fixed=0, order=118)
	public java.lang.String getFormGroupProportion() {
		return getStr("form_group_proportion");
	}

	/**
	 * 是否启用Path注解路由
	 */
	public M setIsViewUsePath(java.lang.Boolean isViewUsePath) {
		set("is_view_use_path", isViewUsePath);
		return (M)this;
	}
	
	/**
	 * 是否启用Path注解路由
	 */
	@JBoltField(name="isViewUsePath" ,columnName="is_view_use_path",type="Boolean", remark="是否启用Path注解路由", required=true, maxLength=1, fixed=0, order=119)
	public java.lang.Boolean getIsViewUsePath() {
		return getBoolean("is_view_use_path");
	}

	/**
	 * 使用布局器
	 */
	public M setViewLayout(java.lang.String viewLayout) {
		set("view_layout", viewLayout);
		return (M)this;
	}
	
	/**
	 * 使用布局器
	 */
	@JBoltField(name="viewLayout" ,columnName="view_layout",type="String", remark="使用布局器", required=true, maxLength=255, fixed=0, order=120)
	public java.lang.String getViewLayout() {
		return getStr("view_layout");
	}

	/**
	 * 是否需要创建新的路由配置类
	 */
	public M setIsNeedNewRoute(java.lang.Boolean isNeedNewRoute) {
		set("is_need_new_route", isNeedNewRoute);
		return (M)this;
	}
	
	/**
	 * 是否需要创建新的路由配置类
	 */
	@JBoltField(name="isNeedNewRoute" ,columnName="is_need_new_route",type="Boolean", remark="是否需要创建新的路由配置类", required=true, maxLength=1, fixed=0, order=121)
	public java.lang.Boolean getIsNeedNewRoute() {
		return getBoolean("is_need_new_route");
	}

	/**
	 * 哪个路由配置类
	 */
	public M setRoutesClassName(java.lang.String routesClassName) {
		set("routes_class_name", routesClassName);
		return (M)this;
	}
	
	/**
	 * 哪个路由配置类
	 */
	@JBoltField(name="routesClassName" ,columnName="routes_class_name",type="String", remark="哪个路由配置类", required=false, maxLength=255, fixed=0, order=122)
	public java.lang.String getRoutesClassName() {
		return getStr("routes_class_name");
	}

	/**
	 * 是否需要后台管理权限拦截器
	 */
	public M setIsNeedAdminInterceptor(java.lang.Boolean isNeedAdminInterceptor) {
		set("is_need_admin_interceptor", isNeedAdminInterceptor);
		return (M)this;
	}
	
	/**
	 * 是否需要后台管理权限拦截器
	 */
	@JBoltField(name="isNeedAdminInterceptor" ,columnName="is_need_admin_interceptor",type="Boolean", remark="是否需要后台管理权限拦截器", required=true, maxLength=1, fixed=0, order=123)
	public java.lang.Boolean getIsNeedAdminInterceptor() {
		return getBoolean("is_need_admin_interceptor");
	}

	/**
	 * 额外配置的拦截器
	 */
	public M setExtraInterceptorClassName(java.lang.String extraInterceptorClassName) {
		set("extra_interceptor_class_name", extraInterceptorClassName);
		return (M)this;
	}
	
	/**
	 * 额外配置的拦截器
	 */
	@JBoltField(name="extraInterceptorClassName" ,columnName="extra_interceptor_class_name",type="String", remark="额外配置的拦截器", required=false, maxLength=255, fixed=0, order=124)
	public java.lang.String getExtraInterceptorClassName() {
		return getStr("extra_interceptor_class_name");
	}

	/**
	 * 表格查询条件是否启用高级多条件模式
	 */
	public M setIsTableMultiConditionsMode(java.lang.Boolean isTableMultiConditionsMode) {
		set("is_table_multi_conditions_mode", isTableMultiConditionsMode);
		return (M)this;
	}
	
	/**
	 * 表格查询条件是否启用高级多条件模式
	 */
	@JBoltField(name="isTableMultiConditionsMode" ,columnName="is_table_multi_conditions_mode",type="Boolean", remark="表格查询条件是否启用高级多条件模式", required=true, maxLength=1, fixed=0, order=125)
	public java.lang.Boolean getIsTableMultiConditionsMode() {
		return getBoolean("is_table_multi_conditions_mode");
	}

	/**
	 * 表格toolbar上启用添加按钮
	 */
	public M setIsToolbarAddBtn(java.lang.Boolean isToolbarAddBtn) {
		set("is_toolbar_add_btn", isToolbarAddBtn);
		return (M)this;
	}
	
	/**
	 * 表格toolbar上启用添加按钮
	 */
	@JBoltField(name="isToolbarAddBtn" ,columnName="is_toolbar_add_btn",type="Boolean", remark="表格toolbar上启用添加按钮", required=true, maxLength=1, fixed=0, order=126)
	public java.lang.Boolean getIsToolbarAddBtn() {
		return getBoolean("is_toolbar_add_btn");
	}

	/**
	 * 表格toolbar上启用编辑按钮
	 */
	public M setIsToolbarEditBtn(java.lang.Boolean isToolbarEditBtn) {
		set("is_toolbar_edit_btn", isToolbarEditBtn);
		return (M)this;
	}
	
	/**
	 * 表格toolbar上启用编辑按钮
	 */
	@JBoltField(name="isToolbarEditBtn" ,columnName="is_toolbar_edit_btn",type="Boolean", remark="表格toolbar上启用编辑按钮", required=true, maxLength=1, fixed=0, order=127)
	public java.lang.Boolean getIsToolbarEditBtn() {
		return getBoolean("is_toolbar_edit_btn");
	}

	/**
	 * 表格toolbar上启用删除按钮
	 */
	public M setIsToolbarDelBtn(java.lang.Boolean isToolbarDelBtn) {
		set("is_toolbar_del_btn", isToolbarDelBtn);
		return (M)this;
	}
	
	/**
	 * 表格toolbar上启用删除按钮
	 */
	@JBoltField(name="isToolbarDelBtn" ,columnName="is_toolbar_del_btn",type="Boolean", remark="表格toolbar上启用删除按钮", required=true, maxLength=1, fixed=0, order=128)
	public java.lang.Boolean getIsToolbarDelBtn() {
		return getBoolean("is_toolbar_del_btn");
	}

	/**
	 * 表格toolbar上启用恢复按钮 当有is_deleted时
	 */
	public M setIsToolbarRecoverBtn(java.lang.Boolean isToolbarRecoverBtn) {
		set("is_toolbar_recover_btn", isToolbarRecoverBtn);
		return (M)this;
	}
	
	/**
	 * 表格toolbar上启用恢复按钮 当有is_deleted时
	 */
	@JBoltField(name="isToolbarRecoverBtn" ,columnName="is_toolbar_recover_btn",type="Boolean", remark="表格toolbar上启用恢复按钮 当有is_deleted时", required=true, maxLength=1, fixed=0, order=129)
	public java.lang.Boolean getIsToolbarRecoverBtn() {
		return getBoolean("is_toolbar_recover_btn");
	}

	/**
	 * 表格tolbar上启用刷新按钮
	 */
	public M setIsToolbarRefreshBtn(java.lang.Boolean isToolbarRefreshBtn) {
		set("is_toolbar_refresh_btn", isToolbarRefreshBtn);
		return (M)this;
	}
	
	/**
	 * 表格tolbar上启用刷新按钮
	 */
	@JBoltField(name="isToolbarRefreshBtn" ,columnName="is_toolbar_refresh_btn",type="Boolean", remark="表格tolbar上启用刷新按钮", required=true, maxLength=1, fixed=0, order=130)
	public java.lang.Boolean getIsToolbarRefreshBtn() {
		return getBoolean("is_toolbar_refresh_btn");
	}

	/**
	 * 是否启用pageTitle上的添加按钮
	 */
	public M setIsPageTitleAddBtn(java.lang.Boolean isPageTitleAddBtn) {
		set("is_page_title_add_btn", isPageTitleAddBtn);
		return (M)this;
	}
	
	/**
	 * 是否启用pageTitle上的添加按钮
	 */
	@JBoltField(name="isPageTitleAddBtn" ,columnName="is_page_title_add_btn",type="Boolean", remark="是否启用pageTitle上的添加按钮", required=true, maxLength=1, fixed=0, order=131)
	public java.lang.Boolean getIsPageTitleAddBtn() {
		return getBoolean("is_page_title_add_btn");
	}

	/**
	 * 是否启用pageTitle上的刷新按钮
	 */
	public M setIsPageTitleRefreshBtn(java.lang.Boolean isPageTitleRefreshBtn) {
		set("is_page_title_refresh_btn", isPageTitleRefreshBtn);
		return (M)this;
	}
	
	/**
	 * 是否启用pageTitle上的刷新按钮
	 */
	@JBoltField(name="isPageTitleRefreshBtn" ,columnName="is_page_title_refresh_btn",type="Boolean", remark="是否启用pageTitle上的刷新按钮", required=true, maxLength=1, fixed=0, order=132)
	public java.lang.Boolean getIsPageTitleRefreshBtn() {
		return getBoolean("is_page_title_refresh_btn");
	}

	/**
	 * 是否启用pageTitle上的初始化顺序按钮
	 */
	public M setIsPageTitleInitRankBtn(java.lang.Boolean isPageTitleInitRankBtn) {
		set("is_page_title_init_rank_btn", isPageTitleInitRankBtn);
		return (M)this;
	}
	
	/**
	 * 是否启用pageTitle上的初始化顺序按钮
	 */
	@JBoltField(name="isPageTitleInitRankBtn" ,columnName="is_page_title_init_rank_btn",type="Boolean", remark="是否启用pageTitle上的初始化顺序按钮", required=true, maxLength=1, fixed=0, order=133)
	public java.lang.Boolean getIsPageTitleInitRankBtn() {
		return getBoolean("is_page_title_init_rank_btn");
	}

	/**
	 * 是否启用systemLog日志
	 */
	public M setIsProjectSystemLog(java.lang.Boolean isProjectSystemLog) {
		set("is_project_system_log", isProjectSystemLog);
		return (M)this;
	}
	
	/**
	 * 是否启用systemLog日志
	 */
	@JBoltField(name="isProjectSystemLog" ,columnName="is_project_system_log",type="Boolean", remark="是否启用systemLog日志", required=true, maxLength=1, fixed=0, order=134)
	public java.lang.Boolean getIsProjectSystemLog() {
		return getBoolean("is_project_system_log");
	}

	/**
	 * 系统日志text
	 */
	public M setProjectSystemLogTargetTypeText(java.lang.String projectSystemLogTargetTypeText) {
		set("project_system_log_target_type_text", projectSystemLogTargetTypeText);
		return (M)this;
	}
	
	/**
	 * 系统日志text
	 */
	@JBoltField(name="projectSystemLogTargetTypeText" ,columnName="project_system_log_target_type_text",type="String", remark="系统日志text", required=false, maxLength=20, fixed=0, order=135)
	public java.lang.String getProjectSystemLogTargetTypeText() {
		return getStr("project_system_log_target_type_text");
	}

	/**
	 * 系统日志value值
	 */
	public M setProjectSystemLogTargetTypeValue(java.lang.String projectSystemLogTargetTypeValue) {
		set("project_system_log_target_type_value", projectSystemLogTargetTypeValue);
		return (M)this;
	}
	
	/**
	 * 系统日志value值
	 */
	@JBoltField(name="projectSystemLogTargetTypeValue" ,columnName="project_system_log_target_type_value",type="String", remark="系统日志value值", required=false, maxLength=10, fixed=0, order=136)
	public java.lang.String getProjectSystemLogTargetTypeValue() {
		return getStr("project_system_log_target_type_value");
	}

	/**
	 * 系统日志KeyName
	 */
	public M setProjectSystemLogTargetTypeKeyName(java.lang.String projectSystemLogTargetTypeKeyName) {
		set("project_system_log_target_type_key_name", projectSystemLogTargetTypeKeyName);
		return (M)this;
	}
	
	/**
	 * 系统日志KeyName
	 */
	@JBoltField(name="projectSystemLogTargetTypeKeyName" ,columnName="project_system_log_target_type_key_name",type="String", remark="系统日志KeyName", required=false, maxLength=40, fixed=0, order=137)
	public java.lang.String getProjectSystemLogTargetTypeKeyName() {
		return getStr("project_system_log_target_type_key_name");
	}

	/**
	 * form表单的dialog的area属性 长宽
	 */
	public M setFormDialogArea(java.lang.String formDialogArea) {
		set("form_dialog_area", formDialogArea);
		return (M)this;
	}
	
	/**
	 * form表单的dialog的area属性 长宽
	 */
	@JBoltField(name="formDialogArea" ,columnName="form_dialog_area",type="String", remark="form表单的dialog的area属性 长宽", required=false, maxLength=20, fixed=0, order=138)
	public java.lang.String getFormDialogArea() {
		return getStr("form_dialog_area");
	}

}

