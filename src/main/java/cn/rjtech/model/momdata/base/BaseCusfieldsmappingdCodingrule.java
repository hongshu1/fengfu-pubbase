package cn.rjtech.model.momdata.base;
import cn.jbolt.core.model.base.JBoltBaseModel;
import cn.jbolt.core.gen.JBoltField;
import com.alibaba.fastjson.annotation.JSONField;
import com.alibaba.fastjson.serializer.ToStringSerializer;

/**
 * 系统设置-导入字段编码规则
 * Generated by JBolt, do not modify this file.
 */
@SuppressWarnings({"serial", "unchecked"})
public abstract class BaseCusfieldsmappingdCodingrule<M extends BaseCusfieldsmappingdCodingrule<M>> extends JBoltBaseModel<M>{
    /**主键ID*/
    public static final String IAUTOID = "iAutoId";
    /**导入编码字段ID*/
    public static final String ICUSFIELDSMAPPINGDID = "iCusFieldsMappingDid";
    /**显示顺序值*/
    public static final String ISEQ = "iSeq";
    /**编码字符类型;1. 编码 2. 分隔符*/
    public static final String ITYPE = "iType";
    /**分隔符;编码字符类型为2时，分隔符，支持空格、“”*/
    public static final String CSEPARATOR = "cSeparator";
    /**编码长度*/
    public static final String ILENGTH = "iLength";
	/**
	 * 主键ID
	 */
	public M setIAutoId(java.lang.Long iAutoId) {
		set("iAutoId", iAutoId);
		return (M)this;
	}

	/**
	 * 主键ID
	 */
	@JBoltField(name="iautoid" ,columnName="iAutoId",type="Long", remark="主键ID", required=true, maxLength=19, fixed=0, order=1)
	@JSONField(name = "iautoid", serializeUsing = ToStringSerializer.class)
	public java.lang.Long getIAutoId() {
		return getLong("iAutoId");
	}

	/**
	 * 导入编码字段ID
	 */
	public M setICusFieldsMappingDid(java.lang.Long iCusFieldsMappingDid) {
		set("iCusFieldsMappingDid", iCusFieldsMappingDid);
		return (M)this;
	}

	/**
	 * 导入编码字段ID
	 */
	@JBoltField(name="icusfieldsmappingdid" ,columnName="iCusFieldsMappingDid",type="Long", remark="导入编码字段ID", required=true, maxLength=19, fixed=0, order=2)
	@JSONField(name = "icusfieldsmappingdid", serializeUsing = ToStringSerializer.class)
	public java.lang.Long getICusFieldsMappingDid() {
		return getLong("iCusFieldsMappingDid");
	}

	/**
	 * 显示顺序值
	 */
	public M setISeq(java.lang.Integer iSeq) {
		set("iSeq", iSeq);
		return (M)this;
	}

	/**
	 * 显示顺序值
	 */
	@JBoltField(name="iseq" ,columnName="iSeq",type="Integer", remark="显示顺序值", required=true, maxLength=10, fixed=0, order=3)
	@JSONField(name = "iseq")
	public java.lang.Integer getISeq() {
		return getInt("iSeq");
	}

	/**
	 * 编码字符类型;1. 编码 2. 分隔符
	 */
	public M setIType(java.lang.Integer iType) {
		set("iType", iType);
		return (M)this;
	}

	/**
	 * 编码字符类型;1. 编码 2. 分隔符
	 */
	@JBoltField(name="itype" ,columnName="iType",type="Integer", remark="编码字符类型;1. 编码 2. 分隔符", required=true, maxLength=10, fixed=0, order=4)
	@JSONField(name = "itype")
	public java.lang.Integer getIType() {
		return getInt("iType");
	}

	/**
	 * 分隔符;编码字符类型为2时，分隔符，支持空格、“”
	 */
	public M setCSeparator(java.lang.String cSeparator) {
		set("cSeparator", cSeparator);
		return (M)this;
	}

	/**
	 * 分隔符;编码字符类型为2时，分隔符，支持空格、“”
	 */
	@JBoltField(name="cseparator" ,columnName="cSeparator",type="String", remark="分隔符;编码字符类型为2时，分隔符，支持空格、“”", required=false, maxLength=4, fixed=0, order=5)
	@JSONField(name = "cseparator")
	public java.lang.String getCSeparator() {
		return getStr("cSeparator");
	}

	/**
	 * 编码长度
	 */
	public M setILength(java.lang.Integer iLength) {
		set("iLength", iLength);
		return (M)this;
	}

	/**
	 * 编码长度
	 */
	@JBoltField(name="ilength" ,columnName="iLength",type="Integer", remark="编码长度", required=false, maxLength=10, fixed=0, order=6)
	@JSONField(name = "ilength")
	public java.lang.Integer getILength() {
		return getInt("iLength");
	}

}

